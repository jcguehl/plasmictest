// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: a8YFUxgfWi7wVnE4zUTdHu
// Component: HLdMCApIJR
import * as React from "react";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Button from "../../Button"; // plasmic-import: P_Sp_1dQVxN/component

import { useScreenVariants as useScreenVariants_9UDyiizdylhVu } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: 9UDyiizdylhVu/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_blank_project.module.css"; // plasmic-import: a8YFUxgfWi7wVnE4zUTdHu/projectcss
import sty from "./PlasmicQuoteResult.module.css"; // plasmic-import: HLdMCApIJR/css

import Icon2Icon from "./icons/PlasmicIcon__Icon2"; // plasmic-import: Lf-rUrGG8DQ/icon
import Icon3Icon from "./icons/PlasmicIcon__Icon3"; // plasmic-import: _V-bKrveTkE/icon
import ChecksvgIcon from "./icons/PlasmicIcon__Checksvg"; // plasmic-import: RgzVS264hj5/icon
import Icon14Icon from "./icons/PlasmicIcon__Icon14"; // plasmic-import: jHTGMgxyK6p/icon
import ArrowRightsvgIcon from "./icons/PlasmicIcon__ArrowRightsvg"; // plasmic-import: DaMXTT5snq2/icon
import imageIEaJdxJa9CZ from "./images/image.jpeg"; // plasmic-import: iEAJdxJa9cZ/picture
import image2Hmx1MfOxvj0 from "./images/image2.jpeg"; // plasmic-import: HMX1MFOxvj0/picture
import image3P1AW3Qdbqm from "./images/image3.jpeg"; // plasmic-import: p1A_W3Qdbqm/picture

export type PlasmicQuoteResult__VariantMembers = {};

export type PlasmicQuoteResult__VariantsArgs = {};
type VariantPropType = keyof PlasmicQuoteResult__VariantsArgs;
export const PlasmicQuoteResult__VariantProps = new Array<VariantPropType>();

export type PlasmicQuoteResult__ArgsType = {};
type ArgPropType = keyof PlasmicQuoteResult__ArgsType;
export const PlasmicQuoteResult__ArgProps = new Array<ArgPropType>();

export type PlasmicQuoteResult__OverridesType = {
  root?: p.Flex<"div">;
  foreground?: p.Flex<"div">;
  h1?: p.Flex<"h1">;
  faQs?: p.Flex<"div">;
  container5?: p.Flex<"div">;
  accordion4?: p.Flex<"div">;
  accordion8?: p.Flex<"div">;
  accordion9?: p.Flex<"div">;
  accordion10?: p.Flex<"div">;
  footerTop?: p.Flex<"div">;
  container?: p.Flex<"div">;
  footerBottom?: p.Flex<"div">;
  container2?: p.Flex<"div">;
};

export interface DefaultQuoteResultProps {
  className?: string;
}

function PlasmicQuoteResult__RenderFunc(props: {
  variants: PlasmicQuoteResult__VariantsArgs;
  args: PlasmicQuoteResult__ArgsType;
  overrides: PlasmicQuoteResult__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(
    () =>
      Object.assign(
        {},

        props.args
      ),
    [props.args]
  );

  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariants_9UDyiizdylhVu()
  });

  return (
    <React.Fragment>
      {}

      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            sty.root
          )}
        >
          <div className={classNames(projectcss.all, sty.freeBox__sWtgk)}>
            <div className={classNames(projectcss.all, sty.freeBox__eIuqU)}>
              <p.Stack
                as={"div"}
                hasGap={true}
                className={classNames(projectcss.all, sty.freeBox__cLpsx)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__cPvD6)}
                >
                  {true ? (
                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__sx8Kg
                      )}
                    >
                      <Icon2Icon
                        className={classNames(projectcss.all, sty.svg__haJw6)}
                        role={"img"}
                      />
                    </a>
                  ) : null}

                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.freeBox__oLInE)}
                  >
                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__vLDc9
                      )}
                    >
                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__m3L3Z)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___1PP7Z
                        )}
                      >
                        {"About Us"}
                      </div>

                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__kYkGq)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__d0Sl
                      )}
                    >
                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__pym2Z)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__yyZn9
                        )}
                      >
                        {"Features"}
                      </div>

                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__yx2G)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__atKSz
                      )}
                    >
                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__b4Xaa)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__a4Snp
                        )}
                      >
                        {"Pricing "}
                      </div>

                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__zkBfm)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__d9YKs
                      )}
                    >
                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__vpkMt)}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__waLwl
                        )}
                      >
                        {"Contact"}
                      </div>

                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__lQh8F)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <p.Stack
                      as={"a"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        sty.link__rgBtr
                      )}
                    >
                      {false ? (
                        <Icon3Icon
                          className={classNames(
                            projectcss.all,
                            sty.svg___31Hoe
                          )}
                          role={"img"}
                        />
                      ) : null}

                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text___0KeLq
                        )}
                      >
                        {"Blog"}
                      </div>

                      {false ? (
                        <Icon3Icon
                          className={classNames(projectcss.all, sty.svg__cYGd)}
                          role={"img"}
                        />
                      ) : null}
                    </p.Stack>

                    <Button
                      className={classNames("__wab_instance", sty.button__e2Vw)}
                      endIcon={
                        <ChecksvgIcon
                          className={classNames(projectcss.all, sty.svg__p6TcR)}
                          role={"img"}
                        />
                      }
                      shape={"rounded" as const}
                      startIcon={
                        <ChecksvgIcon
                          className={classNames(
                            projectcss.all,
                            sty.svg___04Jo6
                          )}
                          role={"img"}
                        />
                      }
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__bpujK
                        )}
                      >
                        {"Get started"}
                      </div>
                    </Button>
                  </p.Stack>
                </p.Stack>
              </p.Stack>
            </div>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__o3Sbx)}>
            <div className={classNames(projectcss.all, sty.freeBox__pb1Q1)}>
              <div className={classNames(projectcss.all, sty.freeBox__i0Gps)} />

              <p.Stack
                as={"div"}
                data-plasmic-name={"foreground"}
                data-plasmic-override={overrides.foreground}
                hasGap={true}
                className={classNames(projectcss.all, sty.foreground)}
              >
                <p.Stack
                  as={"div"}
                  hasGap={true}
                  className={classNames(projectcss.all, sty.freeBox__qehMh)}
                >
                  <div
                    className={classNames(projectcss.all, sty.freeBox___02Iml)}
                  >
                    <h1
                      data-plasmic-name={"h1"}
                      data-plasmic-override={overrides.h1}
                      className={classNames(
                        projectcss.all,
                        projectcss.h1,
                        projectcss.__wab_text,
                        sty.h1
                      )}
                    >
                      {"Pricing plans"}
                    </h1>
                  </div>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___1M3Ux
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </p.Stack>

                <div className={classNames(projectcss.all, sty.freeBox__rbS6T)}>
                  <div
                    className={classNames(projectcss.all, sty.freeBox___1B2Gn)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__u83I5)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__goNbb
                        )}
                      >
                        {"Starter"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__sSsoK
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ryEE
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__jBeIz
                            )}
                          >
                            {"$"}
                          </div>

                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2___6WBa5
                            )}
                          >
                            {"8"}
                          </h2>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__ztqkc
                          )}
                        >
                          {"/month"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__gssJp)}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__tZrYz)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__hrzVo
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__rZ1B
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__fv8Uq
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__fMw1W
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__fkUyS
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__kLaW
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bZh7K
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___2HYUg
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__non4Q
                              )}
                            >
                              {
                                "Vestibulum mollis odio dictum ultrices facilisis molestie vestibulum"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__bJ2Q6
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__bYmhV
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__lfmsj
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__e9Gpq
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__viMe
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__mjCw
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__jCQsy
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ytlT5
                              )}
                            >
                              {"Mus consequat a justo"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>

                      {true ? (
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__x5Nsb
                          )}
                        >
                          <Button
                            className={classNames(
                              "__wab_instance",
                              sty.button__nh86O
                            )}
                            endIcon={
                              <ArrowRightsvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__jTi9
                                )}
                                role={"img"}
                              />
                            }
                            showEndIcon={true}
                            startIcon={
                              <ChecksvgIcon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__q6Vin
                                )}
                                role={"img"}
                              />
                            }
                          >
                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__iDllD
                              )}
                            >
                              {"Buy starter"}
                            </div>
                          </Button>
                        </div>
                      ) : null}
                    </p.Stack>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__rPt3S)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__oGCli)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__z4Rsq
                        )}
                      >
                        {"Pro"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__i2OE4
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___4E6Rg
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__hblsA
                            )}
                          >
                            {"$"}
                          </div>

                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__dHhOp
                            )}
                          >
                            {"16"}
                          </h2>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text___8Xjlu
                          )}
                        >
                          {"/month"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__z90)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__tjEk
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__pmWrQ
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__km2TY
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bObg9
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__dIbA
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__a9FWi
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__jR5VD
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___3ZXOu
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__eHyIi
                              )}
                            >
                              {
                                "Ligula primis mollis sem dignissim semper lectus parturient"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__mhUo0
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox___9QeT
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__trMrq
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__o8Jt
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg___7Q8FT
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rjKdU
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ruDLx
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text___0VfOs
                              )}
                            >
                              {"A curabitur dignissim pharetra porta suscipit"}
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__ivS6D
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__ulkUt
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__snsIt
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__pgySz
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ucj5X
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__p2A
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__d929
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__qFecO
                              )}
                            >
                              {
                                "Condimentum diam a et sapien praesent potenti torquent a eros"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__eZmuR
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__vzYKc
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__zbe1
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__wq3VW
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__ilXVz
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__auAjz
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__fw8Nr
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__ixLbR
                              )}
                            >
                              {"Conubia in hac eu elementum sodales"}
                            </div>
                          </p.Stack>
                        </p.Stack>
                      </p.Stack>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.freeBox___9K5Be
                        )}
                      >
                        <Button
                          className={classNames(
                            "__wab_instance",
                            sty.button__rwwZd
                          )}
                          color={"blue" as const}
                          endIcon={
                            <ArrowRightsvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__esrs9
                              )}
                              role={"img"}
                            />
                          }
                          shape={"rounded" as const}
                          showEndIcon={true}
                          startIcon={
                            <ChecksvgIcon
                              className={classNames(
                                projectcss.all,
                                sty.svg__ajhu3
                              )}
                              role={"img"}
                            />
                          }
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__q1Bqp
                            )}
                          >
                            {"Buy pro"}
                          </div>
                        </Button>
                      </div>
                    </p.Stack>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__qRkEz)}
                    />
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.freeBox__nq7Tp)}
                  >
                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(
                        projectcss.all,
                        sty.freeBox___1MsZr
                      )}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__vwHdf
                        )}
                      >
                        {"Team"}
                      </div>

                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__aLt0
                        )}
                      >
                        <div
                          className={classNames(
                            projectcss.all,
                            sty.freeBox___2K3Gx
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              projectcss.__wab_text,
                              sty.text__v2Moo
                            )}
                          >
                            {"$"}
                          </div>

                          <h2
                            className={classNames(
                              projectcss.all,
                              projectcss.h2,
                              projectcss.__wab_text,
                              sty.h2__zw7A
                            )}
                          >
                            {"10"}
                          </h2>
                        </div>

                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__vtJ5T
                          )}
                        >
                          {"/member"}
                        </div>
                      </p.Stack>
                    </p.Stack>

                    <div
                      className={classNames(projectcss.all, sty.freeBox__sVg6O)}
                    />

                    <p.Stack
                      as={"div"}
                      hasGap={true}
                      className={classNames(projectcss.all, sty.freeBox__iCqnQ)}
                    >
                      <p.Stack
                        as={"div"}
                        hasGap={true}
                        className={classNames(
                          projectcss.all,
                          sty.freeBox__lwj91
                        )}
                      >
                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__d5Jpw
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__rZeBq
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__bKhFl
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox___0JI3R
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__qM79Z
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__izmJv
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___9IUa
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__s8AVl
                              )}
                            >
                              {"Ad nam curae a potenti platea"}
                            </div>
                          </p.Stack>
                        </p.Stack>

                        <p.Stack
                          as={"div"}
                          hasGap={true}
                          className={classNames(
                            projectcss.all,
                            sty.freeBox__chdTv
                          )}
                        >
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__nKIzS
                            )}
                          >
                            <Icon14Icon
                              className={classNames(
                                projectcss.all,
                                sty.svg__rfLpB
                              )}
                              role={"img"}
                            />
                          </div>

                          {false ? (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__ruuWf
                              )}
                            >
                              <Icon14Icon
                                className={classNames(
                                  projectcss.all,
                                  sty.svg__sFm9M
                                )}
                                role={"img"}
                              />
                            </div>
                          ) : null}

                          <p.Stack
                            as={"div"}
                            hasGap={true}
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__npPk
                            )}
                          >
                            {false ? (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__ii0As
                                )}
                              >
                                {"Label"}
                              </div>
                            ) : null}

                            <div
                              className={classNames(
                                projectcss.all,
                                projectcss.__wab_text,
                                sty.text__nrQFa
                              )}
                            >
                              {
                                "A adipiscing scelerisque pretium consectetur sem"
                              }
                            </div>
                          </p.Stack>
                        </p.Stack>

                        {true ? (
                          <div
                            className={classNames(
                              projectcss.all,
                              sty.freeBox__qsSjo
                            )}
                          >
                            <Button
                              className={classNames(
                                "__wab_instance",
                                sty.button__rvK44
                              )}
                              endIcon={
                                <ArrowRightsvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__aUfKf
                                  )}
                                  role={"img"}
                                />
                              }
                              showEndIcon={true}
                              startIcon={
                                <ChecksvgIcon
                                  className={classNames(
                                    projectcss.all,
                                    sty.svg__fCQx
                                  )}
                                  role={"img"}
                                />
                              }
                            >
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text___7NXeU
                                )}
                              >
                                {"Buy Team"}
                              </div>
                            </Button>
                          </div>
                        ) : null}
                      </p.Stack>
                    </p.Stack>
                  </div>
                </div>
              </p.Stack>
            </div>
          </div>

          <div
            data-plasmic-name={"faQs"}
            data-plasmic-override={overrides.faQs}
            className={classNames(projectcss.all, sty.faQs)}
          >
            <div
              data-plasmic-name={"container5"}
              data-plasmic-override={overrides.container5}
              className={classNames(projectcss.all, sty.container5)}
            >
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__ml0O6
                )}
              >
                {"FAQ"}
              </h2>

              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__jUdu9
                )}
              >
                {
                  "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                }
              </div>
            </div>

            <p.Stack
              as={"div"}
              hasGap={true}
              className={classNames(projectcss.all, sty.columns__u9H2C)}
            >
              <div className={classNames(projectcss.all, sty.column__uAwg4)}>
                <div
                  data-plasmic-name={"accordion4"}
                  data-plasmic-override={overrides.accordion4}
                  className={classNames(projectcss.all, sty.accordion4)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__mB57U
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0ZqU5
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__fdJur)}>
                <div
                  data-plasmic-name={"accordion8"}
                  data-plasmic-override={overrides.accordion8}
                  className={classNames(projectcss.all, sty.accordion8)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__txCrs
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text___0SYbO
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column__ka0Is)}>
                <div
                  data-plasmic-name={"accordion9"}
                  data-plasmic-override={overrides.accordion9}
                  className={classNames(projectcss.all, sty.accordion9)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__tmm0R
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qULws
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>

              <div className={classNames(projectcss.all, sty.column___6FT2J)}>
                <div
                  data-plasmic-name={"accordion10"}
                  data-plasmic-override={overrides.accordion10}
                  className={classNames(projectcss.all, sty.accordion10)}
                >
                  <h5
                    className={classNames(
                      projectcss.all,
                      projectcss.h5,
                      projectcss.__wab_text,
                      sty.h5__yjkU
                    )}
                  >
                    {"The standard Lorem Ipsum passage, used since the 1500s"}
                  </h5>

                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__tgGFv
                    )}
                  >
                    {
                      "Nascetur nascetur ridiculus scelerisque adipiscing a nascetur varius sed eu a ad semper a est nec litora ante at orci rhoncus a varius auctor aliquam inceptos vestibulum ridiculus."
                    }
                  </div>
                </div>
              </div>
            </p.Stack>
          </div>

          <div className={classNames(projectcss.all, sty.freeBox__nMody)}>
            <div
              data-plasmic-name={"footerTop"}
              data-plasmic-override={overrides.footerTop}
              className={classNames(projectcss.all, sty.footerTop)}
            >
              <div
                data-plasmic-name={"container"}
                data-plasmic-override={overrides.container}
                className={classNames(projectcss.all, sty.container)}
              >
                <div
                  className={classNames(projectcss.all, sty.columns___2TVmK)}
                >
                  <p.Stack
                    as={"div"}
                    hasGap={true}
                    className={classNames(projectcss.all, sty.column__er0W)}
                  >
                    <Icon2Icon
                      className={classNames(projectcss.all, sty.svg__xQnf)}
                      role={"img"}
                    />

                    <div
                      className={classNames(
                        projectcss.all,
                        projectcss.__wab_text,
                        sty.text__oVyKa
                      )}
                    >
                      {
                        "Lorem Ipsum is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s"
                      }
                    </div>
                  </p.Stack>

                  <div
                    className={classNames(projectcss.all, sty.column__hWpze)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5__vgePt
                      )}
                    >
                      {"Menu"}
                    </h5>

                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__o1Ru8
                      )}
                    >
                      {"Privacy Policy"}
                    </a>

                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__ivO1U
                      )}
                    >
                      {"Terms of Service"}
                    </a>

                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link___1GfV
                      )}
                    >
                      {"Pricing "}
                    </a>

                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__ywBjs
                      )}
                    >
                      {"Contact"}
                    </a>

                    <a
                      className={classNames(
                        projectcss.all,
                        projectcss.a,
                        projectcss.__wab_text,
                        sty.link__gcOr6
                      )}
                    >
                      {"Blog"}
                    </a>
                  </div>

                  <div
                    className={classNames(projectcss.all, sty.column__j29Dc)}
                  >
                    <h5
                      className={classNames(
                        projectcss.all,
                        projectcss.h5,
                        projectcss.__wab_text,
                        sty.h5___4Qn2A
                      )}
                    >
                      {"Gallery"}
                    </h5>

                    <div
                      className={classNames(projectcss.all, sty.columns__nGwqQ)}
                    >
                      <div
                        className={classNames(projectcss.all, sty.column__xfSt)}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__oePhe)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: imageIEaJdxJa9CZ,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__pSvik
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__s732R)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image2Hmx1MfOxvj0,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__wyp6Z
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img___5REls)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image3P1AW3Qdbqm,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>

                    <div
                      className={classNames(projectcss.all, sty.columns__itLhd)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__feKSr
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__nBmf)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: imageIEaJdxJa9CZ,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__neSzL
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__rycb2)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image2Hmx1MfOxvj0,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>

                      <div
                        className={classNames(
                          projectcss.all,
                          sty.column__lxuKc
                        )}
                      >
                        <p.PlasmicImg
                          alt={""}
                          className={classNames(sty.img__za9Se)}
                          displayHeight={"auto" as const}
                          displayMaxHeight={"none" as const}
                          displayMaxWidth={"100%" as const}
                          displayMinHeight={"0" as const}
                          displayMinWidth={"0" as const}
                          displayWidth={"auto" as const}
                          loading={"lazy" as const}
                          src={{
                            src: image3P1AW3Qdbqm,
                            fullWidth: 390,
                            fullHeight: 290,
                            aspectRatio: undefined
                          }}
                        />
                      </div>
                    </div>
                  </div>
                </div>
              </div>
            </div>

            <div
              data-plasmic-name={"footerBottom"}
              data-plasmic-override={overrides.footerBottom}
              className={classNames(projectcss.all, sty.footerBottom)}
            >
              <div
                data-plasmic-name={"container2"}
                data-plasmic-override={overrides.container2}
                className={classNames(projectcss.all, sty.container2)}
              >
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__g7Nl
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>
                      {
                        "© Company Name. All rights reserved. This site proudly built with "
                      }
                    </React.Fragment>
                    {
                      <a
                        className={classNames(
                          projectcss.all,
                          projectcss.a,
                          projectcss.__wab_text,
                          projectcss.plasmic_default__inline,
                          sty.link__xnAHn
                        )}
                        href={"https://www.plasmic.app/" as const}
                      >
                        {"Plasmic"}
                      </a>
                    }
                    <React.Fragment>{"."}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </div>
        </p.Stack>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "foreground",
    "h1",
    "faQs",
    "container5",
    "accordion4",
    "accordion8",
    "accordion9",
    "accordion10",
    "footerTop",
    "container",
    "footerBottom",
    "container2"
  ],
  foreground: ["foreground", "h1"],
  h1: ["h1"],
  faQs: [
    "faQs",
    "container5",
    "accordion4",
    "accordion8",
    "accordion9",
    "accordion10"
  ],
  container5: ["container5"],
  accordion4: ["accordion4"],
  accordion8: ["accordion8"],
  accordion9: ["accordion9"],
  accordion10: ["accordion10"],
  footerTop: ["footerTop", "container"],
  container: ["container"],
  footerBottom: ["footerBottom", "container2"],
  container2: ["container2"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  foreground: "div";
  h1: "h1";
  faQs: "div";
  container5: "div";
  accordion4: "div";
  accordion8: "div";
  accordion9: "div";
  accordion10: "div";
  footerTop: "div";
  container: "div";
  footerBottom: "div";
  container2: "div";
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicQuoteResult__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicQuoteResult__VariantsArgs;
    args?: PlasmicQuoteResult__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicQuoteResult__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicQuoteResult__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicQuoteResult__ArgProps,
          internalVariantPropNames: PlasmicQuoteResult__VariantProps
        }),
      [props, nodeName]
    );

    return PlasmicQuoteResult__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicQuoteResult";
  } else {
    func.displayName = `PlasmicQuoteResult.${nodeName}`;
  }
  return func;
}

export const PlasmicQuoteResult = Object.assign(
  // Top-level PlasmicQuoteResult renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    foreground: makeNodeComponent("foreground"),
    h1: makeNodeComponent("h1"),
    faQs: makeNodeComponent("faQs"),
    container5: makeNodeComponent("container5"),
    accordion4: makeNodeComponent("accordion4"),
    accordion8: makeNodeComponent("accordion8"),
    accordion9: makeNodeComponent("accordion9"),
    accordion10: makeNodeComponent("accordion10"),
    footerTop: makeNodeComponent("footerTop"),
    container: makeNodeComponent("container"),
    footerBottom: makeNodeComponent("footerBottom"),
    container2: makeNodeComponent("container2"),

    // Metadata about props expected for PlasmicQuoteResult
    internalVariantProps: PlasmicQuoteResult__VariantProps,
    internalArgProps: PlasmicQuoteResult__ArgProps
  }
);

export default PlasmicQuoteResult;
/* prettier-ignore-end */
